name: benchmark

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: 17
        distribution: graalvm
        components: native-image
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: build
      run: mvn -B package -Pnative-image
    - name: build native image 
      run: native-image --install-exit-handlers --static --no-fallback -jar unknow-server-test/unknow-server-test-jar/target/server.jar server-native
	- name: build pgo 
	  run: |
	    native-image --pgo-intrumented -jar unknow-server-test/unknow-server-test-jar/target/server.jar server-native-intrumented
		./server-native-intrumented --shutdown :8009 --http-addr :8080 --https-addr :8443 --keystore store.jks --keypass 123456 > dev/null 2>&1 &
		pid=$?
		bash bench/tests.sh 127.0.0.1 1  50000 30 $pid
		echo 'shutdown' | nc 127.0.0.1 8009
		sleep 10
		kill -9 $pid 2>/dev/null
		rm server-native-intrumented
		native-image --pgo=default.iprof --install-exit-handlers --static --no-fallback -jar unknow-server-test/unknow-server-test-jar/target/server.jar server-native-pgo

    - uses: actions/upload-artifact@v4
      if: always()
      with: 
        name: bench
        path: unknow-server-bench/target/benchmark.jar
    - uses: actions/upload-artifact@v4
      if: always()
      with: 
        name: server
        path: |
          unknow-server-test/unknow-server-test-jar/target/server.jar 
          server-native*
          unknow-server-test/*/target/*.war

  bench:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: bench
    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: 17
        distribution: graalvm
        components: native-image
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: bench
      run: java -jar benchmark.jar $GITHUB_STEP_SUMMARY 

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        t: ['cxf', 'tomcat', 'unknow', 'native', 'native-pgo']
    needs: build
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: server
    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: 17
        distribution: graalvm
        components: native-image
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: prepare test
      run: bash bench/prepare.sh
    - name: run bench
      run: bash bench/run.sh ${{matrix.t}}
      env:
        CATALINA_HOME: "${{github.workspace}}/tomcat/"
        JMETER: "${{github.workspace}}/jmeter/bin/jmeter"
    - uses: actions/upload-artifact@v4
      if: always()
      with: 
        name: logs-${{matrix.t}}
        path: logs/*
    - uses: actions/upload-artifact@v4
      if: always()
      with: 
        name: results-${{matrix.t}}
        path: out/*

  result:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: 17
        distribution: graalvm
        components: native-image
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/download-artifact@v4
      with:
        pattern: results-*
        path: out/
        merge-multiple: true
    - uses: actions/download-artifact@v4
      with:
        name: bench
    - name: result
      run: |
        echo '```' >> $GITHUB_STEP_SUMMARY
        java -cp benchmark.jar unknow.server.bench.ProcessResult unknow tomcat cxf native native-pgo >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
